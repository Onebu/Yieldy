{"version":3,"sources":["container/ProfilePages/Profile.js"],"names":["Profile","props","useState","isLoading","setIsLoading","isUpdating","setIsUpdating","isEditing","setIsEditing","profile","useSelector","state","user","userProfile","dispatch","useDispatch","history","useHistory","useEffect","a","userActions","fetchProfile","then","toggleUpdateUsername","tolleAllAndRefresh","toggleEditImage","avatarSize","avatar","profileImage","cloudImage","undefined","className","outline","color","size","onClick","centered","isOpen","toggle","type","role","onSuccess","action","name","username","email","moment","Date","format","company","push"],"mappings":"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","file":"static/js/13.83603ce2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button\n} from 'reactstrap';\nimport {\n  MdModeEdit,\n  MdLiveHelp,\n  MdInfo\n} from 'react-icons/md';\nimport moment from 'moment';\n\nimport { UserCard } from 'components/Card/';\nimport { ProfileBg } from 'components/Layout/';\nimport * as userActions from '../../store/actions/user';\nimport { PageSpinner } from \"components/BasicElement\";\nimport { UpdateUsername, EditImage } from 'components/Form/';\nconst Profile = props => {\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const profile = useSelector(state => state.user.userProfile);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function fetchProfile() {\n      await dispatch(\n        userActions.fetchUserProfile()\n      );\n    }\n    fetchProfile()\n      .then(setIsLoading(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const toggleUpdateUsername = () => {\n    setIsUpdating(!isUpdating);\n  }\n\n  const tolleAllAndRefresh = async () => {\n    setIsUpdating(false);\n    setIsEditing(false);\n  }\n\n  const toggleEditImage = () => {\n    setIsEditing(!isEditing);\n  }\n\n  if (isLoading || !!!profile) {\n    return (<PageSpinner />)\n  }\n\n  return (\n    < ProfileBg >\n      <UserCard\n        avatarSize={120}\n        avatar={!!profile.profileImage ? profile.profileImage.cloudImage : undefined}\n        className=\"border-light\"\n      >\n        <div className=\"text-center\">\n          <Button outline color=\"warning\" size=\"sm\" onClick={toggleEditImage} >Edit Profile Image</Button>\n        </div>\n        <br />\n        <Modal centered isOpen={isUpdating} toggle={toggleUpdateUsername} >\n          <ModalHeader>Update Username</ModalHeader>\n          <ModalBody>\n            <UpdateUsername type={profile.role} onSuccess={() => { dispatch(tolleAllAndRefresh) }} />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"info\" onClick={toggleUpdateUsername}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n        <Modal centered isOpen={isEditing} toggle={toggleEditImage} >\n          <ModalHeader>Edit Profile Image</ModalHeader>\n          <ModalBody>\n            <EditImage type={profile.role} onSuccess={() => { dispatch(tolleAllAndRefresh) }} />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"info\" onClick={toggleEditImage}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n        <ListGroup>\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">Username:</div>\n            <div className=\"mr-auto col-md-4 \">{!!profile.name && profile.name}\n              {!!!profile.name ?\n                profile.username\n                :\n                <small className=\"text-muted\">({profile.username})</small>}</div>\n            <div className=\"cursor-pointer align-self-center text-red-500 \" onClick={toggleUpdateUsername}>Edit<span>&nbsp;&nbsp;</span><MdModeEdit /></div>\n          </ListGroupItem>\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">Email:</div>\n            <div className=\"mr-auto col-md-4\">{profile.email}</div>\n            <MdLiveHelp className=\"cursor-pointer align-self-center\" />\n          </ListGroupItem>\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">User type:</div>\n            <div className=\"mr-auto col-md-4\">{profile.role === \"co\" ? \"Company Owner\" : profile.role}</div>\n            <MdLiveHelp className=\"cursor-pointer align-self-center\" />\n          </ListGroupItem>\n          <hr />\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">Paid plan:</div>\n            <div className=\"mr-auto col-md-4\">Premium</div>\n            <MdLiveHelp className=\"cursor-pointer align-self-center\" />\n          </ListGroupItem>\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">Membership cost:</div>\n            <div className=\"mr-auto col-md-4\">129$</div>\n            <MdLiveHelp className=\"cursor-pointer align-self-center\" />\n          </ListGroupItem>\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">Next billing date:</div>\n            <div className=\"mr-auto col-md-4\">{moment(new Date()).format('YYYY-MM-DD')}</div>\n            <MdLiveHelp className=\"cursor-pointer align-self-center\" />\n          </ListGroupItem>\n          <hr />\n          <ListGroupItem action className=\"border-light d-flex\" onClick={() => { }}>\n            <div className=\"mx-4 font-semibold col-md-4\">Company:</div>\n            <div className=\"mr-auto col-md-4\">{profile.company[0].name}</div>\n            <div className=\"cursor-pointer align-self-center text-red-500\" onClick={() => { history.push(\"/company\") }}>Check now<span>&nbsp;&nbsp;</span><MdInfo /></div>\n          </ListGroupItem>\n        </ListGroup>\n      </UserCard>\n    </ProfileBg >\n  );\n}\n\nexport default Profile;"],"sourceRoot":""}